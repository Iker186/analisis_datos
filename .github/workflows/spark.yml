name: spark
on:
  repository_dispatch:
    types: [spark]

jobs:
  spark:
    runs-on: ubuntu-latest
    environment: social-media

    permissions:
      contents: write

    steps:
    - name: üõí Clonar el repositorio
      uses: actions/checkout@v4

    - name: üêç Configurar Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: üì¶ Instalar dependencias del proyecto
      run: pip install --upgrade pip && pip install -r requirements.txt

    - name: ‚òïÔ∏è Configurar Java
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: temurin

    - name: ‚ö°Ô∏è Instalar Spark
      uses: vemonet/setup-spark@v1
      with:
        spark-version: '3.5.3'
        hadoop-version: '3'

    - name: üì• Descargar dataset y script
      run: |
        wget -O dataset.csv ${{ github.event.client_payload.dataseturl }}
        wget -O app.py ${{ github.event.client_payload.codeurl }}

    - name: üìù Listar archivos descargados
      run: ls -la

    - name: üöÄ Ejecutar Spark
      run: spark-submit --master local app.py 

    - name: üì° Enviar resultados a Kafka (MongoDB)
      run: python producer_mongo.py
      env:
        KAFKA_SERVER: ${{ secrets.KAFKA_SERVER }}
        MONGO_URI: ${{ secrets.MONGO_URI }}
        KAFKA_USERNAME: ${{ secrets.KAFKA_USERNAME }}
        KAFKA_PASSWORD: ${{ secrets.KAFKA_PASSWORD }}
        KAFKA_SECURITY_PROTOCOL: ${{ secrets.KAFKA_SECURITY_PROTOCOL }}
        KAFKA_SASL_MECHANISM: ${{ secrets.KAFKA_SASL_MECHANISM }}

    - name: üßæ Consumir mensajes de Kafka y guardar en MongoDB
      run: python consumer_mongo.py
      env:
        KAFKA_SERVER: ${{ secrets.KAFKA_SERVER }}
        MONGO_URI: ${{ secrets.MONGO_URI }}
        KAFKA_USERNAME: ${{ secrets.KAFKA_USERNAME }}
        KAFKA_PASSWORD: ${{ secrets.KAFKA_PASSWORD }}
        KAFKA_SECURITY_PROTOCOL: ${{ secrets.KAFKA_SECURITY_PROTOCOL }}
        KAFKA_SASL_MECHANISM: ${{ secrets.KAFKA_SASL_MECHANISM }}

    - name: üì° Enviar resultados a Kafka (PostgreSQL)
      run: python producer_postgres.py
      env:
        KAFKA_SERVER: ${{ secrets.KAFKA_SERVER }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
        POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
        KAFKA_USERNAME: ${{ secrets.KAFKA_USERNAME }}
        KAFKA_PASSWORD: ${{ secrets.KAFKA_PASSWORD }}
        KAFKA_SECURITY_PROTOCOL: ${{ secrets.KAFKA_SECURITY_PROTOCOL }}
        KAFKA_SASL_MECHANISM: ${{ secrets.KAFKA_SASL_MECHANISM }}

    - name: üßæ Consumir mensajes de Kafka y guardar en PostgreSQL
      run: python consumer_postgres.py
      env:
        KAFKA_SERVER: ${{ secrets.KAFKA_SERVER }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
        POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
        KAFKA_USERNAME: ${{ secrets.KAFKA_USERNAME }}
        KAFKA_PASSWORD: ${{ secrets.KAFKA_PASSWORD }}
        KAFKA_SECURITY_PROTOCOL: ${{ secrets.KAFKA_SECURITY_PROTOCOL }}
        KAFKA_SASL_MECHANISM: ${{ secrets.KAFKA_SASL_MECHANISM }}

    - name: üß∞ Verificar resultados
      run: ls -la results

    - name: üì§ Commit y Push de resultados
      env: 
        CI_COMMIT_MESSAGE: save spark results
        CI_COMMIT_AUTHOR: adsoft 
      run: |
        git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
        git config --global user.email "sancheziker549@gmail.com"
    
        # üî• Guardar cambios antes del pull
        git stash --include-untracked
    
        # üöÄ Hacer pull para evitar conflictos
        git pull origin main --rebase
    
        # üîÑ Restaurar cambios despu√©s del pull
        git stash pop || echo "No changes to restore"
    
        git add results/
        git commit -m "${{ env.CI_COMMIT_MESSAGE }}" || echo "No changes to commit"
    
        # ‚ö°Ô∏è Push cambios actualizados
        git push origin main
